version: '3'
services:
  db:
    container_name: "my-database"
    image: "citusdata/citus:11.0"
    ports: 
      - "5432:5432"
    environment: 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sample
    restart: always
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  # Need run redis for run some api in app
  redis:
    image: redis:latest
    container_name: "my-redis"
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD="REDIS_PASSWORD"
  # Need run elasticsearch for run some api in app
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    container_name: "my-elasticsearch"
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    ports:
      - 9200:9200
  # Need run kafka for run some api in app
  kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami
    environment:
      # Kafka settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092 # You localhost:9092 for dev, use kafka:9092 for docker internal
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
volumes:
  kafka_data:
    driver: local

  # https://levelup.gitconnected.com/creating-and-filling-a-postgres-db-with-docker-compose-e1607f6f882f